version: 0.2

phases:
  install:
    runtime-versions:
      java: corretto11
    commands:
      - ls
      - curl -o /bin/kubectl https://storage.googleapis.com/kubernetes-release/release/v1.16.0/bin/linux/amd64/kubectl
      - curl -sS -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-07-26/bin/linux/amd64/aws-iam-authenticator
      - chmod +x /bin/kubectl ./aws-iam-authenticator
      - chmod 777 ./gradlew
      - export PATH=$PWD/:$PATH
      - apt-get update && apt-get -y install jq python3-pip python3-dev && pip3 install --upgrade awscli

  pre_build:
    commands:
      - export KUBECONFIG=$HOME/.kube/config
      - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/i2c7a5l2
      - aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --role-arn $ARN_ROLE

  build:
    commands:
      - echo Compilacao iniciada em `date`
      - ./gradlew clean build
      - ./gradlew dockerfile
      - echo Iniciando build da imagem do container...
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG ./build/docker/
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG public.ecr.aws/i2c7a5l2/$IMAGE_REPO_NAME:$IMAGE_TAG
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG public.ecr.aws/i2c7a5l2/$IMAGE_REPO_NAME:$CODEBUILD_BUILD_NUMBER


  post_build:
    commands:
      - echo Enviando imagem para registro de containers...
      - docker push public.ecr.aws/i2c7a5l2/$IMAGE_REPO_NAME:$IMAGE_TAG
      - docker push public.ecr.aws/i2c7a5l2/$IMAGE_REPO_NAME:$CODEBUILD_BUILD_NUMBER
      - echo Aplicando manifestos
      - kubectl apply -f ./pipeline/manifestos/pix-key-manager-rest-configmap.yaml -f ./pipeline/manifestos/pix-key-manager-rest-deploy.yaml -f ./pipeline/manifestos/pix-key-manager-rest-loadbalancer.yaml
      - echo Mudando imagem do deploy
      - kubectl set image deployments/$DEPLOYMENT_NAME $DEPLOYMENT_NAME=public.ecr.aws/i2c7a5l2/$IMAGE_REPO_NAME:$CODEBUILD_BUILD_NUMBER